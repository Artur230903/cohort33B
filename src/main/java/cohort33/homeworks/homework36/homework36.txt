Задание: Unit-тестирование супергероев в Java
Цель задания:
Научиться писать и выполнять модульные тесты для Java-классов, используя библиотеку JUnit, на примере системы управления супергероями.

Описание задачи:
Вы разрабатываете программу для управления супергероями в мире комиксов. Вам необходимо написать класс Superhero, который представляет собой сущность супергероя с полями: имя (name), силой (power), и возрастом (age). Затем вы должны разработать класс SuperheroManager, который будет управлять коллекцией супергероев.

Часть 1: Написание класса Superhero
Создайте класс Superhero с полями:

String name: имя супергероя.
int power: уровень силы супергероя (от 1 до 10).
int age: возраст супергероя.
Реализуйте конструктор для класса Superhero, который принимает параметры name, power и age и инициализирует соответствующие поля.

Добавьте геттеры и сеттеры для всех полей.

Переопределите метод toString() для класса Superhero, чтобы он возвращал строку с информацией о супергерое в формате: "Имя: [name], Сила: [power], Возраст: [age]".

Часть 2: Написание класса SuperheroManager
Создайте класс SuperheroManager для управления коллекцией супергероев. В этом классе должны быть следующие методы:

void addSuperhero(Superhero superhero): метод для добавления супергероя в коллекцию.
void removeSuperhero(String name): метод для удаления супергероя по имени.
Superhero getSuperhero(String name): метод, который возвращает супергероя по имени.
List<Superhero> getAllSuperheroes(): метод, который возвращает список всех супергероев.
Реализуйте методы класса SuperheroManager с учетом следующих правил:

Нельзя добавлять супергероев с одинаковыми именами.
Если метод removeSuperhero не находит супергероя с указанным именем, он должен возвращать null`.
Часть 3: Unit-тестирование с использованием JUnit
Создайте тестовый класс SuperheroManagerTest для класса SuperheroManager.

Напишите тесты для всех методов класса SuperheroManager. Убедитесь, что каждый метод работает корректно и соответствует правилам, указанным в описании задачи.

Ваши тесты должны покрывать следующие сценарии:

Добавление супергероев в коллекцию.
Удаление супергероев из коллекции.
Получение супергероя по имени.
Обработку ситуации при удалении несуществующего супергероя.
Часть 4: Дополнительное задание
Реализуйте дополнительный метод void updateSuperhero(String name, Superhero newSuperhero) в классе SuperheroManager, который позволяет обновить информацию о супергерое по имени.

Напишите соответствующие тесты для метода updateSuperhero в тестовом классе SuperheroManagerTest.